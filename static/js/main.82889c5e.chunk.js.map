{"version":3,"sources":["components/Home/gir.png","logo.svg","util/algorithmFunctions.js","components/Home/Home.js","components/TitleBar/TitleBar.js","components/algoritmos/algoritmoCuadradosMedios.js","components/algoritmos/algoritmoMultiplicadorConstante.js","components/algoritmos/algoritmoLineal.js","components/algoritmos/algortimoCongruencialMultiplicativo.js","components/algoritmos/algortimoCongruencialAditivo.js","components/algoritmos/algortimoCongruencialCuadratico.js","components/algoritmos/algoritmoProductosMedios.js","components/pruebas/pruebaDistChiCuad.js","components/pruebas/pruebaVarianza.js","components/pruebas/pruebaUniformidadChiCuadrada.js","components/pruebas/pruebaHuecos.js","components/pruebas/pruebaIndCorrArrAbMed.js","components/pruebas/pruebaIndepCorrArrAb.js","components/pruebas/pruebaKolSmir.js","components/pruebas/pruebaMedias.js","components/pruebas/pruebaPoker.js","components/pruebas/pruebaSeries.js","components/pruebas/pruebaUniformidadKolSmir.js","components/metodos/metodoConvolucion.js","components/metodos/metodoTransformadaInversa.js","components/Routes/Routes.js","containers/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getMiddleValues","num","d","numString","toString","length","stringLength","Math","floor","slice","transformToR","x","pow","toFixed","Home","className","src","logo","alt","Component","TitleBar","props","title","AlgoritmoCuadradosMedios","useState","setD","seed","setSeed","amount","setAmount","generatedNums","setGeneratedNums","useEffect","seedLength","getNumsObj","y","r","id","type","min","max","value","onChange","e","target","onClick","tempArr","seedSquare","middleSeedValues","modifyNums","push","i","generateNums","map","k","scope","key","AlgoritmoMultiplicadorConstante","a","setA","setUnvalidA","alert","seedProduct","console","log","AlgoritmoLineal","c","setC","m","setM","divR","parseInt","tempY","AlgoritmoCongruencialMultiplicativo","AlgoritmoCongruencialAditivo","seeds","setSeeds","rawList","cleanedList","split","trim","inputToList","xi","xi_n","xi_1","tempSeeds","n","AlgoritmoCongruencialCuadratico","b","setB","x2","x1","AlgoritmoProductosMedios","seed2","setSeed2","seed2Length","PruebaDstrbcnChiCdrd","PruebaVarianza","numbersCSVString","setNumbersCSVString","numbers","setNumbers","media","setMedia","alpha","limitI","setLimitI","limitS","setLimitS","variance","setVariance","display","setDisplay","degreeFreed","temp","chiSquareInverse","invChiSquareCDF","reduce","prev","curr","Number","calculateMed","list","sum","getMessage","PruebaUnidormidadChiCuadrada","setN","setAcepta","setTestRun","chiSum","setChiSum","setAlpha","chiValue","setChiValue","testTable","setTestTable","calculateUni","parseFloat","_n","_m","ei","tempEi","oi","filter","eioisquaredei","interval","eioiei","getObject","PruebaHuecos","setRawList","minInter","setMinInter","maxInter","setMaxInter","table","setTable","H","setH","estTotal","setEstTotal","normalizeList","newList","forEach","fillTable","getOi","firstTable","getEi","getEstadistico","firstOne","indexOf","f","h","holes","obj","total","normList","calculate","getResultMessage","PruebaCorrArrAbMed","numeros","setNumeros","N","C0","setC0","N1","setN1","N0","setN0","MC0","setMC0","VariazaC0","setVariazaC0","Z0","setZ0","Hipot","setHipot","countSwitch","swithflag","count1","count0","mc0","variazaC0","z0","abs","sqrt","prueba","PruebaIndepCorrArrAb","corridas","setCorridas","mCo","setMco","chiCoSq","setChicoSq","zo","setZo","size","setSize","compareAdjacent","s","calculateCorrida","flag","Co","calcMCO","calcChiCo","calcZo","co","mco","chiCo","PruebaKolSmir","PruebaMedias","standardNormalTable","val","index","PruebaPoker","nums","setNums","testRun","setDisable","fillAlpha","setnumList","todoDif","unPar","dosPares","unaTercia","terciaPar","poker","quintilla","categories","setCategories","setEi","eiOi","setEiOi","x20","setx20","chi2","setChi2","prob5D","prob3D","prob4D","solve5D","tempCat","dosPar","str","first","second","third","fourth","fifth","all","includes","count","handleClasifications","td","unP","dosP","unT","terciaP","p","q","chisq","numberList","sorted","replace","substring","sort","join","addCSVValues","PruebaSerie","setCuadrants","numbersLength","setNumbersLength","x2Total","setX2Total","acepta","tempM","notFound","ibase2","closestSquareTable","coordinates","xValue","yValue","base","coordX","coordY","range","tableCuadrnts","j","lowerX","higherX","lowerY","higherY","ammountByCuadrant","tempOi","Array","fill","tempx2Vals","tempx2TotalVal","tempTestTable","Kolmogorov","Dmas","setDmas","Dmenos","setDmenos","Dna","setDna","arr1","arr3","arr4","arr5","d_max","d_min","d_table","d_value","tempAlp","MetodoConvolucion","distSelected","setDistSelected","distName","setDistName","distFormulaStr","setDistFormulaStr","num_erlang","setNum_erlang","media_erlang","setMedia_erlang","cantidad_piezas_erlang","setCantidad_piezas_erlang","setValores_Xi_erlang","erlangResult","setErlangResult","norMedia","setNorMedia","norDS","setNorDS","norRandomN","setNorRandomN","norResults","setNorResults","biProb","setBiProb","biN","setBiN","biDef","setBiDef","num_random","valores_Xi","result","random","multi","rs","calcDistErlang","suma_r","resta_r","tabla","suma","resta","calcDistNormal","error","valores_df","calcDistBinomial","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","MetodoTransformadaInversa","uniVarA","setUniVarA","uniVarBmA","setUniVarBmA","uniResults","setUniResults","expVarDelta","setExpVarDelta","expResults","setExpResults","berVarSuccess","setBerVarSuccess","berResults","setBerResults","poiVarProbSize","setPoiVarProbSize","poiVarDelta","setPoiVarDelta","poiResults","setPoiResults","getMean","factorial","rval","getProbabilityForPoisson","acumPx","px","exp","acum","findInProbTable","needle","prevAcum","mean","sd","standardDeviation","zScore","tempUniResults","ri","calcDistUniforme","tempExpResults","calcDistExponencial","tempBerResults","calcDistBernoulli","tempPoissonResults","calcDistPoisson","Routes","exact","path","component","PruebaUniformidadKolSmir","Header","to","data-target","aria-controls","aria-label","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.82889c5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gir.934a3484.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const getMiddleValues = (num, d) =>{\n    let numString = num.toString();\n    numString = (numString.length - d)%2 == 0 ? '' +numString : '0' +numString;\n    let stringLength = Math.floor((numString.length-d)/2);\n    let finalString = numString.slice(stringLength, stringLength+d);\n    return finalString;\n}\n\nconst transformToR = (x, d) => (x*Math.pow(10,-d)).toFixed(d);\n\nmodule.exports = {getMiddleValues, transformToR};","import React, { Component } from 'react';\nimport logo from './gir.png';\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport './TitleBar.css'\n\n\nconst TitleBar = (props) => {\n    return (\n        <div className=\"bar\">\n            <br />\n            <h4>{props.title}</h4>\n        </div>\n    )\n}\n\nexport default TitleBar;","import React, { useState, useEffect } from 'react'\nimport modifyNums from '../../util/algorithmFunctions'\nimport TitleBar from '../TitleBar/TitleBar';\n\n\nconst AlgoritmoCuadradosMedios = () => {\n    let [d, setD] = useState(3);\n    let [seed, setSeed] = useState(100);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n    useEffect(() => {\n        let seedLength = seed.toString().length;\n        if (d !== seedLength && seedLength > 3 && seedLength < 7) {\n            setD(seedLength);\n        }\n    }, [seed])\n    const getNumsObj = (y, x, r) => {\n        return {\n            y,\n            x,\n            r\n        };\n    };\n    const generateNums = () => {\n        let tempArr = [];\n        let seedSquare = Math.pow(seed, 2);\n        let middleSeedValues = modifyNums.getMiddleValues(seedSquare, d);\n        tempArr.push(getNumsObj(seedSquare, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n        for (let i = 1; i < amount; i++) {\n            seedSquare = Math.pow(tempArr[i - 1].x, 2);\n            middleSeedValues = modifyNums.getMiddleValues(seedSquare, d);\n            tempArr.push(getNumsObj(seedSquare, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n        }\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Algoritmo Cuadrados Medios\" />\n\n            <div className='form-group'>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Seed</span>\n                    </div>\n                    <input id='semilla' type='number' min='100' max='999999' value={seed} onChange={(e) => setSeed(e.target.value)} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Limite de numeros a generar</span>\n                    </div>\n                    <input id='generar' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => generateNums()}>Generar</div>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <p>D: {d}</p>\n                <table className='table table-bordered'>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Y</th>\n                            <th>X</th>\n                            <th>R</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k + 1}>\n                                        <td>{k}</td>\n                                        <td>{e.y}</td>\n                                        <td>{e.x}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCuadradosMedios","import React, { useState, useEffect } from 'react'\nimport modifyNums from '../../util/algorithmFunctions'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst AlgoritmoMultiplicadorConstante = () => {\n    let [d, setD] = useState(3);\n    let [seed, setSeed] = useState(100);\n    let [a, setA] = useState(100);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n    let [unvalidA, setUnvalidA] = useState(false);\n    useEffect(() => {\n        let seedLength = seed.toString().length;\n        if (d !== seedLength && seedLength > 3 && seedLength < 7) {\n            setD(seedLength);\n        }\n    }, [seed, a])\n    const getNumsObj = (y, a, x, r) => {\n        return {\n            y,\n            a,\n            x,\n            r\n        };\n    };\n\n    const generateNums = () => {\n        if (a.toString().length != d) {\n            setUnvalidA(true);\n        } else {\n            setUnvalidA(false);\n            alert(\"La constante y la semilla deben de medir lo mismo\")\n            let tempArr = [];\n            let seedProduct = a * seed;\n            let middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n            tempArr.push(getNumsObj(seedProduct, a, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n            for (let i = 1; i < amount; i++) {\n                seedProduct = a * tempArr[i - 1].x;\n                middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n                tempArr.push(getNumsObj(seedProduct, a, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n            }\n            console.log(tempArr)\n            setGeneratedNums(tempArr);\n        }\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Algoritmo Multiplicador Constante\" />\n\n            <div className='form-group'>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Semilla 0: </span>\n                    </div>\n                    <input id='semilla' type='number' min='100' max='999999' value={seed} onChange={(e) => setSeed(e.target.value)} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Constante: </span>\n                    </div>\n                    <input id='semilla' type='number' min='100' max='999999' value={a} onChange={(e) => setA(e.target.value)} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">N: </span>\n                    </div>\n                    <input id='generar' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">limite de la lista</span>\n                    </div>\n                </div>\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => generateNums()}>Generar</div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D: {d}</p>\n                <table className='table table-bordered'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Y</th>\n                            <th scope=\"col\">A</th>\n                            <th scope=\"col\">X</th>\n                            <th scope=\"col\">R</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.y}</td>\n                                        <td>{e.a}</td>\n                                        <td>{e.x}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoMultiplicadorConstante","import React, { useState } from 'react'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst AlgoritmoLineal = () => {\n    let [d, setD] = useState(0);\n    let [seed, setSeed] = useState(0)\n    let [a, setA] = useState(0);\n    let [c, setC] = useState(0);\n    let [m, setM] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (c, y, a, x, divR, r) => {\n        return {\n            c,\n            y,\n            a,\n            x,\n            divR,\n            r\n        };\n    };\n\n    const generateNums = () => {\n        let tempArr = [];\n        let tempY = ((a * seed) + c) % m;\n        tempArr.push(getNumsObj(c, tempY, a, seed, `${tempY}/${m - 1}`, (tempY / (m - 1)).toFixed(d)));\n        for (let i = 1; i < amount; i++) {\n            tempY = (a * tempArr[i - 1].y + c) % m;\n            tempArr.push(getNumsObj(c, tempY, a, tempArr[i - 1].y, `${tempY}/${m - 1}`, (tempY / (m - 1)).toFixed(d)));\n        }\n        console.log(tempArr);\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Algoritmo Lineal\" />\n\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">M: </span>\n                    </div>\n                    <input type='number' value={m} onChange={(e) => setM(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">modulus</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">A: </span>\n                    </div>\n                    <input type='number' value={a} onChange={(e) => setA(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">1 + 4k</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">C: </span>\n                    </div>\n                    <input type='number' value={c} onChange={(e) => setC(parseInt(e.target.value))} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">Relativamente primo a m</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">d: </span>\n                    </div>\n                    <input type='number' value={d} onChange={(e) => setD(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">decimales</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Xo: </span>\n                    </div>\n                    <input type='number' value={seed} onChange={(e) => setSeed(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">valor inicial</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">N: </span>\n                    </div>\n                    <input id='generar' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">limite de la lista</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => generateNums()}>Generar</div>\n                </div>\n            </div>\n\n            <div className='row'>\n                <p>D: {d}</p>\n                <table className='table table-bordered'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">R</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.x}</td>\n                                        <td>{e.y}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoLineal","import React, { useState } from 'react'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst AlgoritmoCongruencialMultiplicativo = () => {\n    let [d, setD] = useState(0);\n    let [seed, setSeed] = useState(0)\n    let [a, setA] = useState(0);\n    let [m, setM] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (y, a, x, divR, r) => {\n        return {\n            y,\n            a,\n            x,\n            divR,\n            r\n        };\n    };\n\n    const generateNums = () => {\n        let tempArr = [];\n        let tempY = ((a * seed)) % m;\n        tempArr.push(getNumsObj(tempY, a, seed, `${tempY}/${m - 1}`, (tempY / (m - 1)).toFixed(d)));\n        for (let i = 1; i < amount; i++) {\n            tempY = (a * tempArr[i - 1].y) % m;\n            tempArr.push(getNumsObj(tempY, a, tempArr[i - 1].y, `${tempY}/${m - 1}`, (tempY / (m - 1)).toFixed(d)));\n        }\n        console.log(tempArr)\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Algoritmo Algoritmo Congruencial Multiplicativo\" />\n\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">M: </span>\n                    </div>\n                    <input type='number' value={m} onChange={(e) => setM(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">modulus</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">A: </span>\n                    </div>\n                    <input type='number' value={a} onChange={(e) => setA(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">1 + 4k</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">d: </span>\n                    </div>\n                    <input type='number' value={d} onChange={(e) => setD(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">decimales</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Xo: </span>\n                    </div>\n                    <input type='number' value={seed} onChange={(e) => setSeed(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">valor inicial</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">N: </span>\n                    </div>\n                    <input id='generar' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">limite de la lista</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => generateNums()}>Generar</div>\n                </div>\n\n\n            </div>\n            <div className='row'>\n                <p>D: {d}</p>\n                <table className='table table-bordered'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">Process</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.x}</td>\n                                        <td>{e.y}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCongruencialMultiplicativo","import React, { useState, useEffect } from 'react'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst AlgoritmoCongruencialAditivo = () => {\n    let [d, setD] = useState(0);\n    let [seeds, setSeeds] = useState([])\n    let [m, setM] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (xi, xi_n, xi_1, divR, r) => {\n        return {\n            xi,\n            xi_n,\n            xi_1,\n            divR,\n            r\n        };\n    };\n\n    const inputToList = (rawList) => {\n        let cleanedList = rawList.split(',').map((x) => {\n            return x.trim() * 1\n        })\n        setSeeds(cleanedList)\n    }\n\n    const generateNums = () => {\n        let tempArr = [];\n        let tempY;\n        let tempSeeds = [...seeds]\n        let n = seeds.length\n\n        for (let i = 0; i < amount; i++) {\n            console.log(`${tempSeeds[i]} ${tempSeeds[i + n - 1]} ${n}`)\n            tempY = (tempSeeds[i] + tempSeeds[i + n - 1]) % m;\n            tempSeeds.push(tempY);\n            tempArr.push(getNumsObj(tempY, tempSeeds[i], tempSeeds[i + n - 1], `${tempY}/${m - 1}`, (tempY / (m - 1)).toFixed(d)));\n            console.log(tempArr);\n            console.log(tempSeeds)\n        }\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Algoritmo Algoritmo Congruencial Aditivo\" />\n\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">M: </span>\n                    </div>\n                    <input type='number' value={m} onChange={(e) => setM(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">modulus</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">d: </span>\n                    </div>\n                    <input type='number' value={d} onChange={(e) => setD(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">decimales</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Xo - Xn: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => inputToList(e.target.value)} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">N: </span>\n                    </div>\n                    <input id='generar' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">limite de la lista</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => generateNums()}>Generar</div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D: {d}</p>\n                <table className='table table-bordered'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi-n</th>\n                            <th scope=\"col\">R</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.xi}</td>\n                                        <td>{e.xi_1}</td>\n                                        <td>{e.xi_n}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCongruencialAditivo","import React, { useState } from 'react'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst AlgoritmoCongruencialCuadratico = () => {\n    let [d, setD] = useState(0);\n    let [seed, setSeed] = useState(0)\n    let [a, setA] = useState(0);\n    let [b, setB] = useState(0);\n    let [c, setC] = useState(0);\n    let [m, setM] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (b, c, a, x2, x1, divR, r) => {\n        return {\n            b,\n            c,\n            x1,\n            a,\n            x2,\n            divR,\n            r\n        };\n    };\n\n    const generateNums = () => {\n        let tempArr = [];\n        let tempY = ((a * Math.pow(seed, 2) + b * seed) + c) % m;\n        tempArr.push(getNumsObj(b, c, a, tempY, tempY, `${tempY}/${m - 1}`, (tempY / (m - 1)).toFixed(d)));\n        for (let i = 1; i < amount; i++) {\n            tempY = ((a * Math.pow(tempArr[i - 1].x2, 2) + b * tempArr[i - 1].x2) + c) % m;\n            tempArr.push(getNumsObj(b, c, a, tempY, tempY, `${tempY}/${m - 1}`, (tempY / (m - 1)).toFixed(d)));\n        }\n        console.log(tempArr)\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Algoritmo Congruencial Cuadratico\" />\n\n            <div className='form-group'>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">d: </span>\n                    </div>\n                    <input id='semilla' type='number' value={d} onChange={(e) => setD(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">decimales</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">A: </span>\n                    </div>\n                    <input id='semilla' type='number' value={a} onChange={(e) => setA(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">...</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">B: </span>\n                    </div>\n                    <input id='semilla' type='number' value={b} onChange={(e) => setB(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">...</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">C: </span>\n                    </div>\n                    <input id='semilla' type='number' value={c} onChange={(e) => setC(parseInt(e.target.value))} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">...</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">M: </span>\n                    </div>\n                    <input id='semilla' type='number' value={m} onChange={(e) => setM(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">modulus</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Xo: </span>\n                    </div>\n                    <input id='semilla' type='number' value={seed} onChange={(e) => setSeed(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">valor inicial</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">N: </span>\n                    </div>\n                    <input id='generar' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">limite de numeros</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => generateNums()}>Generar</div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D: {d}</p>\n                <table className='table table-bordered'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">R</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.x1}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCongruencialCuadratico","import React, { useState, useEffect } from 'react'\nimport modifyNums from '../../util/algorithmFunctions'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst AlgoritmoProductosMedios = () => {\n    let [d, setD] = useState(3);\n    let [seed, setSeed] = useState(100);\n    let [seed2, setSeed2] = useState(100);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n    useEffect(() => {\n        let seedLength = seed.toString().length;\n        let seed2Length = seed2.toString().length\n        if (d !== seedLength && seedLength > 3 && seedLength < 7 && seed2Length > 3 && seed2Length < 7) {\n            setD(seedLength > seed2Length ? seedLength : seed2Length);\n        }\n    }, [seed, seed2])\n    const getNumsObj = (y, x1, x2, r) => {\n        return {\n            y,\n            x1,\n            x2,\n            r\n        };\n    };\n\n    const generateNums = () => {\n        let tempArr = [];\n        let seedProduct = seed * seed2;\n        let middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n        tempArr.push(getNumsObj(seedProduct, seed2, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n        for (let i = 1; i < amount; i++) {\n            seedProduct = tempArr[i - 1].x1 * tempArr[i - 1].x2;\n            middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n            tempArr.push(getNumsObj(seedProduct, tempArr[i - 1].x2, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n        }\n        console.log(tempArr)\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Algoritmo Productos Medios\" />\n\n            <div className='form-group'>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Semilla 0: </span>\n                    </div>\n                    <input id='semilla' type='number' min='100' max='999999' value={seed} onChange={(e) => setSeed(e.target.value)} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Semilla 1: </span>\n                    </div>\n                    <input id='semilla' type='number' min='100' max='999999' value={seed2} onChange={(e) => setSeed2(e.target.value)} />\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">N: </span>\n                    </div>\n                    <input id='generar' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">limite de la lista</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => generateNums()}>Generar</div>\n                </div>\n            </div>\n\n            <div className='row'>\n                <p>D: {d}</p>\n                <table className='table table-bordered'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Y</th>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">R</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.y}</td>\n                                        <td>{e.x1}</td>\n                                        <td>{e.x2}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoProductosMedios","import React from 'react'\n\nconst PruebaDstrbcnChiCdrd = () =>{\n    return (\n        <div>\n            <h1>\n                Hola de Prueba Distribución Chi Chuadrada\n            </h1>\n        </div>\n    )\n}\n\nexport default PruebaDstrbcnChiCdrd","import React, { useState, useEffect } from 'react'\nimport chiSquareInverse from 'inv-chisquare-cdf'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst PruebaVarianza = () => {\n    let [c, setC] = useState('')\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [media, setMedia] = useState(0);\n    let [alpha, setAlpha] = useState(0.05);\n    let [limitI, setLimitI] = useState(0);\n    let [limitS, setLimitS] = useState(0);\n    let [variance, setVariance] = useState(0);\n    let [display, setDisplay] = useState(false);\n\n    useEffect(() => {\n        let degreeFreed = numbers.length ? numbers.length - 1 : 1;\n        let temp = (12 * (numbers.length - 1));\n        setLimitI(chiSquareInverse.invChiSquareCDF(alpha / 2, degreeFreed) / temp);\n        setLimitS(chiSquareInverse.invChiSquareCDF((1 - (alpha / 2)), degreeFreed) / temp);\n    }, [alpha, numbers])\n\n    useEffect(() => {\n        let temp = numbers.length > 0 ? numbers.reduce((prev, curr) => {\n            return (Number(prev) + Math.pow(Number(curr) - media, 2))\n        }) : '';\n        setVariance(temp / (numbers.length - 1));\n    }, [media])\n\n\n    const getMessage = () => {\n        if (display) {\n            if (limitI < variance && limitS > variance) {\n                return \"No se puede rechazar Ho\"\n            } else {\n                return \"Se rechaza Ho\"\n            }\n        }\n    }\n\n    const inputToList = () => {\n        let cleanedList = numbersCSVString.split(',').map((x) => {\n            return x.trim()\n        })\n        return cleanedList\n    }\n\n    const calculateMed = () => {\n        let list = inputToList()\n        setNumbers(list)\n        if (list.length > 0) {\n            let sum = list.reduce((prev, curr) => {\n                return (Number(prev) + Number(curr)).toFixed(4)\n            })\n            setMedia(sum / list.length)\n        }\n    }\n\n    const calculate = () => {\n        calculateMed()\n        setDisplay(true)\n    }\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Prueba de Varianza\" />\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Alpha: </span>\n                    </div>\n                    <input id='semilla' type='text' value={c} onChange={(e) => setC(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">nivel de confianza</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setNumbersCSVString(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => calculate()}>Generar</div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <p>{getMessage()}</p>\n            </div>\n\n            {display &&\n                <div className=\"row\">\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Tamaño</th>\n                                <th scope=\"col\">Li</th>\n                                <th scope=\"col\">Ls</th>\n                                <th scope=\"col\">V(r)</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{numbers.length}</td>\n                                <td>{limitI.toFixed(4)}</td>\n                                <td>{limitS.toFixed(4)}</td>\n                                <td>{variance.toFixed(4)}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default PruebaVarianza\n\n/*\n0.0449,\n0.1733,\n0.5746,\n0.049,\n0.8406,\n0.849,\n0.92,\n0.2564,\n0.6015,\n0.6694,\n0.3972,\n0.7025,\n0.1055,\n0.1247,\n0.1977,\n0.0125,\n0.63,\n0.2531,\n0.8297,\n0.6483,\n0.6972,\n0.9582,\n0.9085,\n0.8524,\n0.5514,\n0.0316,\n0.3587,\n0.7041,\n0.5915,\n0.2523,\n0.2545,\n0.3044,\n0.0207,\n0.1067,\n0.3857,\n0.1746,\n0.3362,\n0.1589,\n0.3727,\n0.4145\n*/","import React, { useEffect, useState } from 'react'\nimport chiSquareInverse from 'inv-chisquare-cdf'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst PruebaUnidormidadChiCuadrada = () => {\n    let [c, setC] = useState('');\n    let [n, setN] = useState(0);\n    let [m, setM] = useState(0);\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [chiSum, setChiSum] = useState(0);\n    let [alpha, setAlpha] = useState(0.05);\n    let [chiValue, setChiValue] = useState(0);\n    let [testTable, setTestTable] = useState([]);\n    let [display, setDisplay] = useState(false);\n\n    const getObject = (interval, oi, ei, eioiei) => {\n        return {\n            interval,\n            oi,\n            ei,\n            eioiei\n        }\n    }\n\n    useEffect(() => {\n        if (chiValue > chiSum) {\n            setAcepta(true)\n        }\n        if (testTable.length > 0)\n            setTestRun(true);\n    }, [chiSum])\n\n    useEffect(() => {\n        let degreeFreed = m > 2 ? m - 1 : 1;\n        setChiValue(chiSquareInverse.invChiSquareCDF(1 - alpha / 2, degreeFreed));\n    }, [alpha, m])\n\n    const getMessage = () => {\n        if (display) {\n            if (chiValue > chiSum) {\n                return `No se puede rechazar Ho: Cálculo(${chiSum.toFixed(2)}) < Chi(${chiValue.toFixed(2)})`\n            } else {\n                return `Se rechaza Ho: Cálculo(${chiSum.toFixed(2)}) > Chi(${chiValue.toFixed(2)})... Nuestro calculo es mayor a Chi^2`\n            }\n        }\n    }\n\n    const inputToList = () => {\n        let cleanedList = numbersCSVString.split(',').map((x) => {\n            return x.trim()\n        })\n        setAlpha(parseFloat(c));\n        setN(cleanedList.length);\n        setM(Math.pow(cleanedList.length, .5));\n        return cleanedList\n    }\n\n    const calculateUni = () => {\n        let list = inputToList()\n        setNumbers(list)\n\n        let _n = list.length\n        let _m = Math.pow(list.length, .5)\n\n        if (list.length > 0) {\n            let ei = _n / _m;\n            let temp = [...testTable]\n            let tempEi = [];\n            for (let i = 0; i < _m; i++) {\n                let oi = list.filter((e) => (e > (.1 * i) && e < (.1 * (i + 1)))).length\n                let eioisquaredei = Math.pow(ei - oi, 2) / ei\n                temp.push(getObject(`[${.01 * i}-${.01 * (i + 1)}]`, oi, ei, eioisquaredei));\n                tempEi.push(eioisquaredei);\n            }\n            setTestTable(temp)\n            setChiSum(tempEi.reduce((prev, curr) => prev + curr));\n        }\n    }\n\n    const calculate = () => {\n        calculateUni()\n        setDisplay(true)\n    }\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Prueba de Uniformidad Chi-Cuadrada\" />\n            <div className='form-group'>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Alpha: </span>\n                    </div>\n                    <input id='semilla' type='text' value={c} onChange={(e) => setC(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">nivel de confianza</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setNumbersCSVString(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => calculate()}>Generar</div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <p>{getMessage()}</p>\n            </div>\n            {\n                display &&\n                <div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">i</th>\n                                <th scope=\"col\">Oi</th>\n                                <th scope=\"col\">Ei = n/m</th>\n                                <th scope=\"col\">(Ei-Oi)^2/Ei</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                testTable.map((e) => {\n                                    {\n                                        return (\n                                            <tr>\n                                                <td>{e.interval}</td>\n                                                <td>{e.oi}</td>\n                                                <td>{e.ei}</td>\n                                                <td>{e.eioiei}</td>\n                                            </tr>\n                                        )\n                                    }\n                                })\n                            }\n                        </tbody>\n                    </table>\n\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default PruebaUnidormidadChiCuadrada\n\n/*\n\n0.347,\n0.832,\n0.966,\n0.472,\n0.797,\n0.101,\n0.696,\n0.966,\n0.404,\n0.603,\n0.993,\n0.371,\n0.729,\n0.067,\n0.189,\n0.977,\n0.843,\n0.562,\n0.549,\n0.992,\n0.674,\n0.628,\n0.055,\n0.494,\n0.494,\n0.235,\n0.178,\n0.775,\n0.797,\n0.252,\n0.426,\n0.054,\n0.022,\n0.742,\n0.674,\n0.898,\n0.641,\n0.674,\n0.821,\n0.19,\n0.46,\n0.224,\n0.99,\n0.786,\n0.393,\n0.461,\n0.011,\n0.977,\n0.246,\n0.881,\n0.189,\n0.753,\n0.73,\n0.797,\n0.292,\n0.876,\n0.707,\n0.562,\n0.562,\n0.821,\n0.112,\n0.191,\n0.584,\n0.347,\n0.426,\n0.057,\n0.819,\n0.303,\n0.404,\n0.64,\n0.37,\n0.314,\n0.731,\n0.742,\n0.213,\n0.472,\n0.641,\n0.944,\n0.28,\n0.663,\n0.909,\n0.764,\n0.999,\n0.303,\n0.718,\n0.933,\n0.056,\n0.415,\n0.819,\n0.444,\n0.178,\n0.516,\n0.437,\n0.393,\n0.268,\n0.123,\n0.945,\n0.527,\n0.459,\n0.652\n\n\n*/","import React, { useState, useEffect } from 'react'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst PruebaHuecos = () => {\n    let [rawList, setRawList] = useState(\"\");\n    let [minInter, setMinInter] = useState(0);\n    let [maxInter, setMaxInter] = useState(1);\n    let [table, setTable] = useState([]);\n    let [H, setH] = useState(0);\n    let [estTotal, setEstTotal] = useState(0)\n    let [display, setDisplay] = useState(false);\n    const X2 = 11.07\n\n    const calculate = () => {\n        let list = inputToList()\n        let normList = normalizeList(list)\n        let table = fillTable(normList)\n\n        setTable(table)\n        setDisplay(true)\n    }\n\n    const inputToList = () => {\n        let cleanedList = rawList.split(',').map((x) => {\n            return x.trim()\n        })\n        return cleanedList\n    }\n\n    // agrega 1 si el numero esta dentro de los intervalos, 0 si no\n    const normalizeList = (list) => {\n        let newList = []\n        list.forEach((x) => {\n            if (minInter <= x && x <= maxInter) {\n                newList.push(1)\n            } else {\n                newList.push(0)\n            }\n        })\n        return newList\n    }\n\n    // llama a todos los metodos necesarios para llenar la tabla\n    const fillTable = (list) => {\n        let { firstTable, H } = getOi(list)\n        setH(H)\n        let table = getEi(firstTable, H)\n        return getEstadistico(table)\n    }\n\n    // cuenta los hoyos con un tamaño dado\n    const getOi = (list) => {\n        console.log(list)\n        let firstOne = list.indexOf(1)\n        let H = 0\n        let table = [\n            { i: 0, oi: 0, ei: 0, f: 0 },\n            { i: 1, oi: 0, ei: 0, f: 0 },\n            { i: 2, oi: 0, ei: 0, f: 0 },\n            { i: 3, oi: 0, ei: 0, f: 0 },\n            { i: 4, oi: 0, ei: 0, f: 0 },\n            { i: 5, oi: 0, ei: 0, f: 0 }\n        ]\n        for (let h = 0; h <= 5; h++) {\n            let holes = 0\n            for (let i = firstOne; i < list.length - 1; i++) {\n                for (let k = i + 1; k < list.length; k++) {\n                    if (list[k] === 1) {\n                        if (list[i] === list[k]) {\n                            if (h === holes) {\n                                table[h].oi += 1\n                                H++\n                            } else if (h === 5 && holes >= 5) {\n                                table[h].oi += 1\n                                H++\n                            }\n                            i = k\n                        }\n                        holes = 0\n                    } else {\n                        holes++\n                    }\n\n                }\n            }\n        }\n        return { firstTable: table, H: H }\n    }\n\n    // set values for the EI column\n    const getEi = (table, H) => {\n        table.forEach((obj) => {\n            obj.ei = H * (maxInter - minInter).toFixed(1) * Math.pow((1 - (maxInter - minInter).toFixed(1)), obj.i)\n        })\n        return table\n    }\n\n    // set values for the Last column\n    const getEstadistico = (table) => {\n        let total = 0\n        table.forEach((obj) => {\n            obj.f = Math.pow((obj.ei - obj.oi), 2) / obj.ei\n            total += obj.f\n        })\n        setEstTotal(total)\n        return table\n    }\n\n    const getResultMessage = () => {\n        if (display) {\n            if (estTotal < X2) {\n                return \"No se puede rechazar la Ho: \" + estTotal.toFixed(2) + \" < \" + X2\n            } else {\n                return \"Se rechaza la Ho: \" + + estTotal.toFixed(2) + \" > \" + X2\n            }\n        }\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Prueba de Huecos\" />\n\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Intervalo 0: </span>\n                    </div>\n                    <input id='intervalo0' type='number' min='0' max='1' onChange={(e) => setMinInter(e.target.value * 1)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">min 0</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Intervalo 1: </span>\n                    </div>\n                    <input id='intervalo1' type='number' min='0' max='1' onChange={(e) => setMaxInter(e.target.value * 1)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">max 1</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setRawList(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => calculate()}>Generar</div>\n                </div>\n                <div className=\"row\">\n                    <p>{getResultMessage()}</p>\n                </div>\n            </div>\n\n            {display &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Tamaño Hueco</th>\n                            <th scope=\"col\">Oi</th>\n                            <th scope=\"col\">Ei</th>\n                            <th scope=\"col\">Estadistico</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            table.map((e) => {\n                                return (\n                                    <tr scope=\"row\" key={e.i}>\n                                        <td>{e.i}</td>\n                                        <td>{e.oi}</td>\n                                        <td>{e.ei.toFixed(3)}</td>\n                                        <td>{e.f.toFixed(3)}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        <tr scope=\"row\">\n                            <td>TOTAL</td>\n                            <td>H={H}</td>\n                            <td>H={H}</td>\n                            <td>{estTotal.toFixed(3)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            }\n        </div>\n    )\n}\n\nexport default PruebaHuecos\n\n/*\n0.872,\n0.950,\n0.343,\n0.058,\n0.384,\n0.219,\n0.041,\n0.036,\n0.213,\n0.946,\n0.570,\n0.842,\n0.706,\n0.809,\n0.300,\n0.618,\n0.512,\n0.462,\n0.005,\n0.203,\n0.291,\n0.151,\n0.596,\n0.443,\n0.868,\n0.913,\n0.511,\n0.586,\n0.608,\n0.879\n*/","import React, { useState, useEffect } from 'react'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst PruebaCorrArrAbMed = () => {\n    let [numeros, setNumeros] = useState('');\n    let [N, setN] = useState(0);\n    let [C0, setC0] = useState(0);\n    let [N1, setN1] = useState(0);\n    let [N0, setN0] = useState(0);\n    let [MC0, setMC0] = useState(0);\n    let [VariazaC0, setVariazaC0] = useState(0);\n    let [Z0, setZ0] = useState(0);\n    let [Hipot, setHipot] = useState('');\n\n    const prueba = () => {\n        let tempArr = numeros.split(',');\n        let n = tempArr.length\n        setN(n)\n        let media = 0.5;\n        let countSwitch = 0;\n        let swithflag = 0;\n\n        let count1 = tempArr.reduce((a, b) => {\n            let temp = parseFloat(b.trim()) > media ? 1 : 0\n            if (temp != swithflag) {\n                countSwitch++;\n                swithflag = !swithflag;\n            }\n            return parseInt(a) + temp;\n        }, 0)\n        let count0 = n - count1\n\n        setC0(countSwitch)\n        setN1(count1)\n        setN0(count0);\n        let mc0 = ((2 * count1 * count0) / n) + (1 / 2);\n        setMC0(mc0);\n\n        let variazaC0 = ((2 * count0 * count1) * (2 * count0 * count1 - n)) / ((n * n) * (n - 1))\n        setVariazaC0(variazaC0)\n\n        let z0 = Math.abs((countSwitch - mc0) / Math.sqrt(variazaC0))\n        setZ0(z0)\n\n        let hipot = 1.96 > z0 && z0 > -1.96 ? \"Como el valor Zo cae dentro de nuestro intervalo (-1.96, 1.96) no podemos rechazar que los números sean independientes\" :\n            \"Como el valor Zo no cae dentro de nuestro intervalo (-1.96, 1.96) podemos concluir que los números no son independientes\";\n        setHipot(hipot)\n    }\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Prueba: Corridas Arriba y Abajo Media\" />\n\n            <div className='form-group'>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setNumeros(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => prueba()}>Generar</div>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <p>{Hipot}</p>\n            </div>\n\n            {Hipot &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Tamaño</th>\n                            <th scope=\"col\">C0</th>\n                            <th scope=\"col\">N1</th>\n                            <th scope=\"col\">N0</th>\n                            <th scope=\"col\">MC0</th>\n                            <th scope=\"col\">Varianza0</th>\n                            <th scope=\"col\">Zo</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{N}</td>\n                            <td>{C0}</td>\n                            <td>{N1.toFixed(5)}</td>\n                            <td>{N0.toFixed(5)}</td>\n                            <td>{MC0.toFixed(5)}</td>\n                            <td>{VariazaC0.toFixed(5)}</td>\n                            <td>{Z0.toFixed(5)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            }\n\n        </div>\n    )\n}\n\nexport default PruebaCorrArrAbMed\n\n/*\n0.809,\n0.042,\n0.432,\n0.538,\n0.225,\n0.88,\n0.688,\n0.772,\n0.036,\n0.854,\n0.397,\n0.268,\n0.821,\n0.897,\n0.07,\n0.721,\n0.087,\n0.35,\n0.779,\n0.482,\n0.136,\n0.855,\n0.453,\n0.197,\n0.444,\n0.799,\n0.809,\n0.691,\n0.545,\n0.857,\n0.692,\n0.055,\n0.348,\n0.373,\n0.436,\n0.29,\n0.015,\n0.834,\n0.599,\n0.724,\n0.564,\n0.709,\n0.946,\n0.754,\n0.677,\n0.128,\n0.012,\n0.498,\n0.6,\n0.913\n\n*/","import React, { useState, useEffect } from 'react'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst PruebaIndepCorrArrAb = () => {\n    let [rawList, setRawList] = useState(\"\");\n    let [corridas, setCorridas] = useState(0);\n    let [mCo, setMco] = useState(0);\n    let [chiCoSq, setChicoSq] = useState(0);\n    let [zo, setZo] = useState(0);\n    let [size, setSize] = useState(0);\n    let [display, setDisplay] = useState(false);\n\n    const calculate = () => {\n        let r = inputToList()\n        let n = r.length\n        let s = compareAdjacent(r)\n        let corridas = calculateCorrida(s)\n        let mco = calcMCO(n)\n        let chiCo = calcChiCo(n)\n        let zo = calcZo(corridas, mco, chiCo)\n\n        setSize(n)\n        setCorridas(corridas)\n        setMco(mco)\n        setChicoSq(chiCo)\n        setZo(zo)\n        setDisplay(true)\n    }\n\n    const inputToList = () => {\n        let cleanedList = rawList.split(',').map((x) => {\n            return x.trim()\n        })\n        return cleanedList\n    }\n\n    const compareAdjacent = (list) => {\n        let s = []\n        for (let i = 1; i < list.length; i++) {\n            if (list[i - 1] <= list[i]) {\n                s.push(1)\n            } else {\n                s.push(0)\n            }\n        }\n        return s\n    }\n\n    const calculateCorrida = (s) => {\n        let flag = s[0]\n        let Co = 1\n        s.forEach((x) => {\n            if (x !== flag) {\n                Co++\n                flag = x\n            }\n        })\n        return Co\n    }\n\n    const calcMCO = (n) => {\n        return (2 * n - 1) / 3\n    }\n\n    const calcChiCo = (n) => {\n        return (16 * n - 29) / 90\n    }\n\n    const calcZo = (co, mco, chiCo) => {\n        return Math.abs((co - mco) / Math.sqrt(chiCo))\n    }\n\n    const getMessage = () => {\n        if (display) {\n            if (zo <= 1.96) {\n                return \"No se puede rechazar Ho\"\n            } else {\n                return \"Se rechaza Ho\"\n            }\n        }\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Prueba: Corridas Arriba y Abajo\" />\n\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setRawList(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => calculate()}>Generar</div>\n                </div>\n\n            </div>\n            <div className=\"row\">\n                <p>Alfa = 5% (1.96)</p> <br />\n            </div>\n            <div className=\"row\">\n                <p>{getMessage()}</p>\n            </div>\n            {display &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Tamaño</th>\n                            <th scope=\"col\">Corridas</th>\n                            <th scope=\"col\">mCo</th>\n                            <th scope=\"col\">Chi2 Co</th>\n                            <th scope=\"col\">Zo</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{size}</td>\n                            <td>{corridas}</td>\n                            <td>{mCo.toFixed(5)}</td>\n                            <td>{chiCoSq.toFixed(5)}</td>\n                            <td>{zo.toFixed(5)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            }\n        </div>\n    )\n}\n\nexport default PruebaIndepCorrArrAb","import React from 'react'\n\nconst PruebaKolSmir = () =>{\n    return (\n        <div>\n            <h1>\n                Hola de Prueba Kolmogorov-Smirnov\n            </h1>\n        </div>\n    )\n}\n\nexport default PruebaKolSmir","import React, { useState, useEffect } from 'react'\nimport { standardNormalTable } from 'simple-statistics'\nimport TitleBar from '../TitleBar/TitleBar';\n\nconst PruebaMedias = () => {\n    let [c, setC] = useState('')\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [media, setMedia] = useState(0);\n    let [alpha, setAlpha] = useState(0);\n    let [limitI, setLimitI] = useState(0.0);\n    let [limitS, setLimitS] = useState(0.0);\n    let [display, setDisplay] = useState(false);\n\n    useEffect(() => {\n        let temp = (alpha * .01) / (Math.pow(12 * numbers.length, .5));\n\n        setLimitI(.5 - temp);\n        setLimitS(.5 + temp);\n    }, [alpha])\n\n\n    const getMessage = () => {\n        if (display) {\n            if (limitI < media && limitS > media) {\n                return \"No se puede rechazar Ho\"\n            } else {\n                return \"Se rechaza Ho\"\n            }\n        }\n    }\n\n    const inputToList = () => {\n        let cleanedList = numbersCSVString.split(',').map((x) => {\n            return x.trim()\n        })\n        standardNormalTable.forEach((val, index) => {\n            if (val === 1 - (parseFloat(c) / 2)) {\n                setAlpha(index)\n            }\n        });\n        return cleanedList\n    }\n\n    const calculateMed = () => {\n        let list = inputToList()\n        setNumbers(list)\n        if (list.length > 0) {\n            let sum = list.reduce((prev, curr) => {\n                return (Number(prev) + Number(curr)).toFixed(4)\n            })\n            setMedia(sum / list.length)\n        }\n        return list\n    }\n\n    const calculate = () => {\n        let list = calculateMed()\n        setDisplay(true)\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Prueba de Medias\" />\n\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Alpha: </span>\n                    </div>\n                    <input id='semilla' type='text' value={c} onChange={(e) => setC(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">nivel de confianza</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setNumbersCSVString(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => calculate()}>Generar</div>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <p>{getMessage()}</p>\n            </div>\n\n            {display &&\n                <div className=\"row\">\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Tamaño</th>\n                                <th scope=\"col\">Li</th>\n                                <th scope=\"col\">Ls</th>\n                                <th scope=\"col\">ri^</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{numbers.length}</td>\n                                <td>{limitI.toFixed(4)}</td>\n                                <td>{limitS.toFixed(4)}</td>\n                                <td>{media.toFixed(4)}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default PruebaMedias\n\n// 0.0449,0.1733,0.5746,0.049,0.8406,0.849,0.92,0.2564,0.6015,0.6694,0.3972,0.7025,0.1055,0.1247,0.1977,0.0125,0.63,0.2531,0.8297,0.6483,0.6972,0.9582,0.9085,0.8524,0.5514,0.0316,0.3587,0.7041,0.5915,0.2523,0.2545,0.3044,0.0207,0.1067,0.3857,0.1746,0.3362,0.1589,0.3727,0.4145","import React, { useState } from \"react\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\nimport TitleBar from \"../TitleBar/TitleBar\";\n\nconst PruebaPoker = () => {\n    const [nums, setNums] = useState([]);\n    let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n    let [testRun, setTestRun] = useState(false);\n    let [disable, setDisable] = useState(true);\n    let [fillAlpha, setFillAlpa] = useState(false);\n    let [numlist, setnumList] = useState([]);\n\n    const [categories, setCategories] = useState([\n        { todoDif: 0 },\n        { unPar: 0 },\n        { dosPares: 0 },\n        { unaTercia: 0 },\n        { terciaPar: 0 },\n        { poker: 0 },\n        { quintilla: 0 },\n    ]);\n    const [ei, setEi] = useState([\n        { todoDif: 0 },\n        { unPar: 0 },\n        { dosPares: 0 },\n        { unaTercia: 0 },\n        { terciaPar: 0 },\n        { poker: 0 },\n        { quintilla: 0 },\n    ]);\n    const [eiOi, setEiOi] = useState([\n        { todoDif: 0 },\n        { unPar: 0 },\n        { dosPares: 0 },\n        { unaTercia: 0 },\n        { terciaPar: 0 },\n        { poker: 0 },\n        { quintilla: 0 },\n        { total: 0 },\n    ]);\n\n    const [alpha, setAlpha] = useState(0);\n    const [x20, setx20] = useState(\"\");\n    const [chi2, setChi2] = useState(0);\n\n    const class5D = [\"TD\", \"1P\", \"2P\", \"1T\", \"TP\", \"P\", \"Q\"];\n    const prob5D = [0.3024, 0.504, 0.108, 0.009, 0.072, 0.0045, 0.0001];\n\n    const class3D = [\"TD\", \"1P\", \"T\"];\n    const prob3D = [0.72, 0.27, 0.01];\n\n    const class4D = [\"TD\", \"1P\", \"2P\", \"1T\", \"P\"];\n    const prob4D = [0.504, 0.432, 0.027, 0.036, 0.001];\n\n    const addCSVValues = () => {\n        let numberList = normalizeList(numbersCSVString);\n        setnumList(numberList);\n        let noNewLine = numberList.map((x) => x.replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n        //console.log(\"original\", noNewLine);\n        var noDot = noNewLine.map((s) => s.substring(2));\n        //console.log(\"NO DOT\", noDot);\n        var sorted = noDot.map((x) => {\n            let arr = x.split(\"\");\n            let sorted = arr.sort((a, b) => a - b);\n            let joinArr = sorted.join(\"\");\n\n            return joinArr;\n        });\n\n        setNums(sorted);\n        if (fillAlpha) {\n            setDisable(false);\n        } else {\n            setDisable(true);\n        }\n    };\n\n    const normalizeList = (rawList) => {\n        let cleanedList = rawList.split(',').map((x) => {\n            return x.trim() * 1\n        })\n        let listStr = cleanedList.map((x) => {\n            return x.toString()\n        })\n        //console.log(\"caca\", listStr)\n        return listStr\n    }\n\n    const handleClasifications = () => {\n        let todoDif = 0;\n        let unPar = 0;\n        let dosPar = 0;\n        let unaTercia = 0;\n        let terciaPar = 0;\n        let poker = 0;\n        let quintilla = 0;\n        //console.log(\"size:\", nums[0].length);\n\n        if (nums[0].length === 5) {\n            let arr = nums.map((str) => {\n                let first = str.split(str[0]).length - 1;\n                let second = str.split(str[1]).length - 1;\n                let third = str.split(str[2]).length - 1;\n                let fourth = str.split(str[3]).length - 1;\n                let fifth = str.split(str[4]).length - 1;\n\n                let all = [];\n                all.push(first);\n                all.push(second);\n                all.push(third);\n                all.push(fourth);\n                all.push(fifth);\n                //console.log(all);\n                //console.log(\"STR:\", str);\n\n                if (all.includes(5)) {\n                    quintilla++;\n                } else if (all.includes(3) && all.includes(2)) {\n                    terciaPar++;\n                } else if (all.includes(2) && all.includes(1)) {\n                    let count = 0;\n                    for (let i = 0; i < all.length; i++) {\n                        if (all[i] === 2) {\n                            count++;\n                        }\n                    }\n                    if (count === 4) {\n                        //console.log(\"2P\");\n                        dosPar++;\n                    } else {\n                        unPar++;\n                        //console.log(\"1P\");\n                    }\n                } else if (all.includes(4)) {\n                    //console.log(\"Poker\");\n                    poker++;\n                } else if (all.includes(3) && all.includes(1)) {\n                    //console.log(\"1T\");\n                    unaTercia++;\n                } else {\n                    //console.log(\"TD\");\n                    todoDif++;\n                }\n            });\n            let tempCat = {\n                todoDif: todoDif,\n                unPar: unPar,\n                dosPares: dosPar,\n                unaTercia: unaTercia,\n                terciaPar: terciaPar,\n                poker: poker,\n                quintilla: quintilla,\n            };\n            setCategories(tempCat);\n            return tempCat;\n        } else if (nums[0].length === 4) {\n            let arr = nums.map((str) => {\n                let first = str.split(str[0]).length - 1;\n                let second = str.split(str[1]).length - 1;\n                let third = str.split(str[2]).length - 1;\n                let fourth = str.split(str[3]).length - 1;\n\n                let all = [];\n                all.push(first);\n                all.push(second);\n                all.push(third);\n                all.push(fourth);\n                //console.log(all);\n\n                if (all.includes(4)) {\n                    poker++;\n                } else if (all.includes(3)) {\n                    unaTercia++;\n                } else if (all.includes(2)) {\n                    let count = 0;\n                    for (let i = 0; i < all.length; i++) {\n                        if (all[i] === 2) {\n                            count++;\n                        }\n                    }\n                    if (count === 4) {\n                        //console.log(\"2P\");\n                        dosPar++;\n                    } else {\n                        unPar++;\n                        //console.log(\"1P\");\n                    }\n                } else {\n                    //console.log(\"TD\");\n                    todoDif++;\n                }\n            });\n\n            let tempCat = {\n                todoDif: todoDif,\n                unPar: unPar,\n                dosPares: dosPar,\n                unaTercia: unaTercia,\n                poker: poker,\n                terciaPar: 0,\n                quintilla: 0,\n            };\n\n            setCategories(tempCat);\n            return tempCat;\n        } else if (nums[0].length === 3) {\n            let arr = nums.map((str) => {\n                let first = str.split(str[0]).length - 1;\n                let second = str.split(str[1]).length - 1;\n                let third = str.split(str[2]).length - 1;\n\n                let all = [];\n                all.push(first);\n                all.push(second);\n                all.push(third);\n                //console.log(all);\n\n                if (all.includes(3)) {\n                    unaTercia++;\n                } else if (all.includes(2)) {\n                    unPar++;\n                } else {\n                    //console.log(\"TD\");\n                    todoDif++;\n                }\n            });\n\n            let tempCat = {\n                todoDif: todoDif,\n                unPar: unPar,\n                unaTercia: unaTercia,\n                poker: poker,\n                terciaPar: 0,\n                quintilla: 0,\n            };\n\n            setCategories(tempCat);\n            return tempCat;\n        }\n    };\n\n    const solve5D = () => {\n        let tempCat = handleClasifications();\n\n        if (nums[0].length === 5) {\n            let ei = prob5D.map((x) => parseFloat(x) * nums.length);\n            setEi({\n                todoDif: ei[0],\n                unPar: ei[1],\n                dosPares: ei[2],\n                unaTercia: ei[3],\n                terciaPar: ei[4],\n                poker: ei[5],\n                quintilla: ei[6],\n            });\n            let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n            let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n            let dosP = Math.pow(ei[2] - tempCat.dosPares, 2) / ei[2];\n            let unT = Math.pow(ei[3] - tempCat.unaTercia, 2) / ei[3];\n            let terciaP = Math.pow(ei[4] - tempCat.terciaPar, 2) / ei[4];\n            let p = Math.pow(ei[5] - tempCat.poker, 2) / ei[5];\n            let q = Math.pow(ei[6] - tempCat.quintilla, 2) / ei[6];\n            let total = td + unP + dosP + unT + terciaP + p + q;\n            setEiOi({\n                todoDif: td,\n                unPar: unP,\n                dosPares: dosP,\n                unaTercia: unT,\n                terciaPar: terciaP,\n                poker: p,\n                quintilla: q,\n                total: total,\n            });\n\n            setx20(total);\n            let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n            setChi2(chisq);\n        } else if (nums[0].length === 4) {\n            let ei = prob4D.map((x) => parseFloat(x) * nums.length);\n            //console.log(\"ENTRA:\", ei);\n            setEi({\n                todoDif: ei[0],\n                unPar: ei[1],\n                dosPares: ei[2],\n                unaTercia: ei[3],\n                terciaPar: 0,\n                poker: ei[4],\n                quintilla: 0,\n            });\n            let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n            let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n            let dosP = Math.pow(ei[2] - tempCat.dosPares, 2) / ei[2];\n            let unT = Math.pow(ei[3] - tempCat.unaTercia, 2) / ei[3];\n            let terciaP = 0;\n            let p = Math.pow(ei[4] - tempCat.poker, 2) / ei[4];\n            let q = 0;\n            let total = td + unP + dosP + unT + terciaP + p + q;\n            setEiOi({\n                todoDif: td,\n                unPar: unP,\n                dosPares: dosP,\n                unaTercia: unT,\n                terciaPar: 0,\n                poker: p,\n                quintilla: 0,\n                total: total,\n            });\n            //console.log(total);\n            setx20(total);\n            let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n            setChi2(chisq);\n            //console.log(chisq);\n        } else if (nums[0].length === 3) {\n            let ei = prob3D.map((x) => parseFloat(x) * nums.length);\n            setEi({\n                todoDif: ei[0],\n                unPar: ei[1],\n                dosPares: 0,\n                unaTercia: ei[2],\n                terciaPar: 0,\n                poker: 0,\n                quintilla: 0,\n            });\n            let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n            let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n            let dosP = 0;\n            let unT = Math.pow(ei[2] - tempCat.unaTercia, 2) / ei[2];\n            let terciaP = 0;\n            let p = 0;\n            let q = 0;\n            let total = td + unP + dosP + unT + terciaP + p + q;\n            setEiOi({\n                todoDif: td,\n                unPar: unP,\n                dosPares: 0,\n                unaTercia: unT,\n                terciaPar: 0,\n                poker: 0,\n                quintilla: 0,\n                total: total,\n            });\n\n            setx20(total);\n            let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n            setChi2(chisq);\n        }\n        setTestRun(true);\n    };\n\n    const getResultMessage = () => {\n        if (testRun) {\n            if (chi2 > x20) {\n                return \"No se puede rechazar la Ho: \" + x20.toFixed(4) + \" <  Valor de la tabla: \" + chi2.toFixed(4)\n            } else {\n                return \"No se rechaza la Ho: \" + x20.toFixed(4) + \" >  Valor de la tabla: \" + chi2.toFixed(4)\n            }\n        }\n    }\n\n    return (\n        <div className=\"container\">\n\n            <TitleBar title=\"Prueba Poker\" />\n\n            <div className=\"form-group\">\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Alpha: </span>\n                    </div>\n                    <input type='number' onChange={(e) => setAlpha(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">nivel de confianza</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input (CSV): </span>\n                    </div>\n                    <textarea id=\"csv\" onChange={(e) => setNumbersCSVString(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">\n                            <div className=\"btn btn-primary\" onClick={() => addCSVValues()}>Agregar Numeros</div>\n                        </span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => solve5D()}>Correr</div>\n                </div>\n            </div>\n\n            <div className=\"row\">{getResultMessage()}</div>\n\n            {testRun ? (\n                <div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Categorias</th>\n                                <th scope=\"col\">Oi</th>\n                                <th scope=\"col\">Ei</th>\n                                <th scope=\"col\"> (Ei-Oi)^2/Ei </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>TD</td>\n                                <td>{categories.todoDif}</td>\n                                <td>{ei.todoDif.toFixed(4)}</td>\n                                <td>{eiOi.todoDif.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td>1P</td>\n                                <td>{categories.unPar}</td>\n                                <td>{ei.unPar.toFixed(4)}</td>\n                                <td>{eiOi.unPar.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td>2P</td>\n                                <td>{categories.dosPares}</td>\n                                <td>{ei.dosPares.toFixed(4)}</td>\n                                <td>{eiOi.dosPares.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td>T</td>\n                                <td>{categories.unaTercia}</td>\n                                <td>{ei.unaTercia.toFixed(4)}</td>\n                                <td>{eiOi.unaTercia.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td>TP</td>\n                                <td>{categories.terciaPar}</td>\n                                <td>{categories.terciaPar.toFixed(4)}</td>\n                                <td>{eiOi.terciaPar.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td>P</td>\n                                <td>{categories.poker}</td>\n                                <td>{ei.poker.toFixed(4)}</td>\n                                <td>{eiOi.poker.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td>Q</td>\n                                <td>{categories.quintilla}</td>\n                                <td>{ei.quintilla.toFixed(4)}</td>\n                                <td>{eiOi.quintilla.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td>Total</td>\n                                <td></td>\n                                <td></td>\n                                <td>{eiOi.total.toFixed(4)}</td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td>CHISQRINV </td>\n                                <td>{chi2.toFixed(4)}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            ) : (\n                    \"\"\n                )}\n        </div>\n    );\n};\n\nexport default PruebaPoker;\n","import React, { useState, useEffect } from \"react\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\nimport TitleBar from \"../TitleBar/TitleBar\";\n\nconst PruebaSerie = () => {\n    let [cuadrants, setCuadrants] = useState([]);\n    let [c, setC] = useState(\"\");\n    let [m, setM] = useState(0);\n    let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n    let [numbers, setNumbers] = useState([]);\n    let [numbersLength, setNumbersLength] = useState(0);\n    let [x2Total, setX2Total] = useState(0);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [alpha, setAlpha] = useState(0.05);\n    let [chiValue, setChiValue] = useState(0);\n    let [testTable, setTestTable] = useState([]);\n\n    useEffect(() => {\n        if (chiValue > x2Total) {\n            setAcepta(true);\n        }\n        if (testTable.length > 0) setTestRun(true);\n    }, [x2Total, chiValue, testTable.length]);\n\n    useEffect(() => {\n        let degreeFreed = m > 2 ? m - 1 : 1;\n        setChiValue(chiSquareInverse.invChiSquareCDF(1 - alpha / 2, degreeFreed));\n    }, [alpha, m]);\n\n    const addCSVValues = () => {\n        if (parseFloat(c)) {\n            let nums = numbersCSVString.split(\",\").map((e) => parseFloat(e));\n            setAlpha(parseFloat(c));\n            setNumbers([...nums]);\n            setNumbersLength(nums.length);\n        }\n    };\n\n    const closestSquareTable = (m) => {\n        let notFound = true;\n        let i = 0;\n        while (notFound) {\n            let ibase2 = Math.pow(i, 2);\n            if (m > ibase2) {\n                i++;\n            } else if (m < ibase2) {\n                m = ibase2;\n                notFound = false;\n            } else if (m == ibase2) {\n                notFound = false;\n            }\n        }\n        return m;\n    };\n\n    const calculate = () => {\n        if (numbers.length > 0) {\n            let nums = [...numbers];\n            let divs = Math.sqrt(numbersLength);\n            let tempM = closestSquareTable(divs);\n            let coordinates = [];\n            console.log(tempM);\n            setM(tempM);\n            let ei = numbersLength / tempM;\n            for (let i = 0; i < numbersLength - 1; i++) {\n                coordinates.push({ xValue: nums[i], yValue: nums[i + 1] });\n            }\n            let base = Math.sqrt(tempM);\n            let coordX = 0;\n            let coordY = 0;\n            let range = 1 / base;\n            let tableCuadrnts = [];\n            for (let i = 0; i < base; i++) {\n                for (let j = 0; j < base; j++) {\n                    tableCuadrnts.push({\n                        lowerX: coordX,\n                        higherX: coordX + range,\n                        lowerY: coordY,\n                        higherY: coordY + range,\n                    });\n                    coordY += range;\n                }\n                coordX += range;\n                coordY = 0;\n            }\n            setCuadrants(tableCuadrnts);\n\n            let ammountByCuadrant = [];\n            for (let i = 0; i < tableCuadrnts.length; i++) {\n                for (let j = 0; j < coordinates.length; j++) {\n                    if (\n                        coordinates[j].xValue > tableCuadrnts[i].lowerX &&\n                        coordinates[j].xValue < tableCuadrnts[i].higherX &&\n                        coordinates[j].yValue > tableCuadrnts[i].lowerY &&\n                        coordinates[j].yValue < tableCuadrnts[i].higherY\n                    ) {\n                        ammountByCuadrant.push(i);\n                    }\n                }\n            }\n\n            let tempOi = new Array(tableCuadrnts.length).fill(0);\n\n            for (let i = 0; i < ammountByCuadrant.length; i++) {\n                tempOi[ammountByCuadrant[i]]++;\n            }\n\n            let tempx2Vals = [];\n            let tempx2TotalVal = 0;\n            for (let i = 0; i < tempM; i++) {\n                console.log(ei);\n                tempx2Vals[i] = parseFloat(Math.pow(ei - tempOi[i], 2) / ei);\n                tempx2TotalVal += tempx2Vals[i];\n            }\n            setX2Total(tempx2TotalVal);\n\n            let tempTestTable = [];\n            for (let i = 0; i < tableCuadrnts.length; i++) {\n                tempTestTable.push({\n                    interval: i + 1,\n                    oi: tempOi[i],\n                    ei: ei,\n                    x2: tempx2Vals[i],\n                });\n            }\n            setTestTable(tempTestTable);\n        }\n    };\n\n    const getResultMessage = () => {\n        if (testRun) {\n            if (acepta) {\n                return \"No se puede rechazar la Ho: \" + x2Total.toFixed(4) + \" <  Valor de la tabla: \" + chiValue.toFixed(4)\n            } else {\n                return \"No se rechaza la Ho: \" + x2Total.toFixed(4) + \" >  Valor de la tabla: \" + chiValue.toFixed(4)\n            }\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Prueba de Series\" />\n\n            <div className=\"form-group\">\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Alpha: </span>\n                    </div>\n                    <input id='semilla' type='text' value={c} onChange={(e) => setC(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">nivel de confianza</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setNumbersCSVString(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">\n                            <div className=\"btn btn-primary\" onClick={() => addCSVValues()}>Agregar Numeros</div>\n                        </span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => calculate()}>Generar</div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <p>{getResultMessage()}</p>\n            </div>\n            {testRun &&\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Oi</th>\n                            <th>Ei = n/m</th>\n                            <th>(Ei-Oi)^2/Ei</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {testTable.map((e, k) => {\n                            {\n                                return (\n                                    <tr key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.oi.toFixed(4)}</td>\n                                        <td>{e.ei.toFixed(4)}</td>\n                                        <td>{e.x2.toFixed(4)}</td>\n                                    </tr>\n                                );\n                            }\n                        })}\n                    </tbody>\n                </table>\n            }\n        </div>\n    );\n};\n\nexport default PruebaSerie;\n\n/*\n\n0.872,\n0.950,\n0.343,\n0.058,\n0.384,\n0.219,\n0.041,\n0.036,\n0.213,\n0.946,\n0.570,\n0.842,\n0.706,\n0.809,\n0.300,\n0.618,\n0.512,\n0.462,\n0.005,\n0.203,\n0.291,\n0.151,\n0.596,\n0.443,\n0.868,\n0.913,\n0.511,\n0.586,\n0.608,\n0.879\n\n\n*/","import React, { useState } from \"react\";\nimport TitleBar from \"../TitleBar/TitleBar\";\n\nconst Kolmogorov = () => {\n    let [numeros, setNumeros] = useState(\"\");\n    let [N, setN] = useState(0);\n    let [c, setC] = useState(0.95);\n    let [alpha, setAlpha] = useState(0.0);\n    let [Dmas, setDmas] = useState(0);\n    let [Dmenos, setDmenos] = useState(0);\n    let [Dna, setDna] = useState(0);\n    let [Hipot, setHipot] = useState(\"\");\n\n    const prueba = () => {\n        if (parseFloat(c) < 0 || parseFloat(c) > 1) {\n            alert(\"Inserta un nivel de aceptacion entre 0 y 1\");\n            return;\n        }\n\n        let tempArr = numeros.split(\",\");\n        let n = tempArr.length;\n        setN(n);\n\n        if (n > 20) {\n            alert(\"La muestra debe tener 20 o menos números\");\n            return;\n        }\n\n        tempArr.sort((a, b) => parseFloat(a) - parseFloat(b));\n        let arr1 = [];\n        let arr3 = [];\n        let arr4 = [];\n        let arr5 = [];\n        for (let i = 0; i < n; i++) {\n            arr1[i] = (i + 1) / n;\n            arr3[i] = i / n;\n            arr4[i] = parseFloat((arr1[i] - tempArr[i]).toFixed(4));\n            arr5[i] = parseFloat((tempArr[i] - arr3[i]).toFixed(4));\n        }\n        let table = [];\n        table[0] = [0.995, 0.99, 0.975, 0.95, 0.9];\n        table[1] = [0.9293, 0.9, 0.8418, 0.7763, 0.6837];\n        table[2] = [0.829, 0.7845, 0.7076, 0.636, 0.5648];\n        table[3] = [0.7342, 0.6888, 0.6239, 0.5652, 0.4926];\n        table[4] = [0.6685, 0.6271, 0.5632, 0.5094, 0.4469];\n        table[5] = [0.6166, 0.5774, 0.5192, 0.4679, 0.4103];\n        table[6] = [0.5758, 0.5384, 0.4834, 0.436, 0.3814];\n        table[7] = [0.5418, 0.5065, 0.4542, 0.4096, 0.3582];\n        table[8] = [0.5133, 0.4796, 0.43, 0.3874, 0.339];\n        table[9] = [0.4889, 0.4566, 0.4092, 0.3686, 0.3225];\n        table[10] = [0.4677, 0.4367, 0.3912, 0.3524, 0.3082];\n        table[11] = [0.449, 0.4191, 0.3754, 0.3381, 0.2957];\n        table[12] = [0.4324, 0.4036, 0.3614, 0.3254, 0.2846];\n        table[13] = [0.4176, 0.3897, 0.3448, 0.3141, 0.2747];\n        table[14] = [0.4042, 0.3771, 0.3376, 0.3039, 0.2658];\n        table[15] = [0.392, 0.3657, 0.3283, 0.2947, 0.2577];\n        table[16] = [0.3808, 0.3552, 0.3179, 0.2862, 0.2503];\n        table[17] = [0.3706, 0.3456, 0.3093, 0.2785, 0.2435];\n        table[18] = [0.3611, 0.3368, 0.3014, 0.2713, 0.2435];\n        table[19] = [0.3524, 0.3286, 0.294, 0.2647, 0.2315];\n\n        let d_max = Math.max(...arr4);\n        let d_min = Math.abs(Math.min(...arr5));\n        setDmas(d_max);\n        setDmenos(d_min);\n\n        let d_value = d_max > d_min ? d_max : d_min;\n        let tempAlp = (1 - parseFloat(c)).toFixed(2);\n\n        setAlpha(tempAlp);\n        let d_table;\n\n        switch (parseFloat(tempAlp)) {\n            case 0.01:\n                d_table = table[n - 1][0];\n                break;\n            case 0.02:\n                d_table = table[n - 1][1];\n                break;\n            case 0.05:\n                d_table = table[n - 1][2];\n                break;\n            case 0.1:\n                d_table = table[n - 1][3];\n                break;\n            case 0.2:\n                d_table = table[n - 1][4];\n                break;\n            default:\n                d_table = 0;\n                break;\n        }\n\n        console.log(d_table, tempAlp);\n        setDna(d_table);\n\n        let hipot =\n            d_table > d_value\n                ? \"Como D α,𝑛 > D no se puede rechazar que los números se distribuyen uniformemente\"\n                : \"Como D α,𝑛 < D se puede rechazar que los números se distribuyen uniformemente\";\n        setHipot(hipot);\n    };\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Prueba Uniformidad Kolmogorov-Smirnov\" />\n            <div className=\"form-group\">\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Alpha: </span>\n                    </div>\n                    <input id='semilla' type='text' value={c} onChange={(e) => setC(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">nivel de confianza</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input: </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setNumeros(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className='btn btn-primary' onClick={(e) => prueba()}>Run</div>\n                </div>\n\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <table className=\"table text-center\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Alpha</th>\n                                <th scope=\"col\">D+</th>\n                                <th scope=\"col\">D-</th>\n                                <th scope=\"col\">Da,n</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{alpha}</td>\n                                <td>{Dmas}</td>\n                                <td>{Dmenos}</td>\n                                <td>{Dna}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <br />\n                    <p className=\"text-center\">{Hipot}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Kolmogorov;\n\n/*\n0.78,\n0.98,\n0.24,\n0.73,\n0.43,\n0.16,\n0.78,\n0.47,\n0.18,\n0.55,\n0.04,\n0.29,\n0.68,\n0.77,\n0.16,\n0.03,\n0.79,\n0.22,\n0.37,\n0.80\n\n\n*/","import React, { useState, useEffect } from 'react'\nimport TitleBar from '../TitleBar/TitleBar'\n\nconst MetodoConvolucion = () => {\n    let [distSelected, setDistSelected] = useState(0);\n    let [distName, setDistName] = useState(\"Selecciona una Distribución\");\n    let [distFormulaStr, setDistFormulaStr] = useState(\"\");\n    let [display, setDisplay] = useState(false);\n    // ERLANG\n    let [num_erlang, setNum_erlang] = useState(0);\n    let [media_erlang, setMedia_erlang] = useState(0);\n    let [cantidad_piezas_erlang, setCantidad_piezas_erlang] = useState(0);\n    let [valores_Xi_erlang, setValores_Xi_erlang] = useState([]);\n    let [erlangResult, setErlangResult] = useState([]);\n    // NORMAL\n    let [norMedia, setNorMedia] = useState(0);\n    let [norDS, setNorDS] = useState(0);\n    let [norRandomN, setNorRandomN] = useState(0);\n    let [norResults, setNorResults] = useState([]);\n    // BINOMIAL\n    let [biProb, setBiProb] = useState(0);\n    let [biN, setBiN] = useState(0);\n    let [biDef, setBiDef] = useState([]);\n\n    useEffect(() => {\n        if (distSelected === 1) {\n            setDistName(\"Erlang\")\n            setDistFormulaStr(\"𝑌=𝐸𝑅𝑖=−1/𝑘𝜆 𝑙𝑛 ∏(𝑖=1)^𝑘:(1−𝑟𝑖) \")\n        } else if (distSelected === 2) {\n            setDistName(\"Normal\")\n            setDistFormulaStr(\"𝑋=𝑁𝑖= [∑_(𝑖=1)^12:(𝑟𝑖) −6 ]+𝜎+𝜇\")\n        } else if (distSelected === 3) {\n            setDistName(\"Binomial\")\n            setDistFormulaStr(\"𝑌=𝐵𝑖=𝐵𝐸1+𝐵𝐸2+ …+𝐵𝐸𝑁 ~𝐵𝐼(𝑁,𝑝)\")\n        }\n    }, [distSelected]);\n\n    const calcDistErlang = () => {\n\n        let num_random = []\n        let valores_Xi = []\n        let result = []\n\n        for (let i = 0; i < num_erlang; i++) {\n            num_random.push([]);\n            for (let e = 0; e < cantidad_piezas_erlang; e++) {\n                num_random[i][e] = parseFloat(\n                    (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n                );\n            }\n        }\n\n        let multi = 1;\n        for (let i = 0; i < cantidad_piezas_erlang; i++) {\n            for (let j = 0; j < num_erlang; j++) {\n                multi *= num_random[j][i];\n            }\n            let value = ((-media_erlang / num_erlang) * Math.log(multi)).toFixed(4);\n            valores_Xi.push(value);\n            multi = 1\n        }\n\n        for (let i = 0; i < cantidad_piezas_erlang; i++) {\n            let rs = []\n            for (let j = 0; j < num_erlang; j++) {\n                rs.push(num_random[j][i]);\n            }\n            let obj = {\n                rs: rs.toString(),\n                y: valores_Xi[i]\n            }\n            result.push(obj)\n        }\n\n        setValores_Xi_erlang(valores_Xi)\n        setErlangResult(result)\n        console.log(\"num random\", num_random);\n        console.log(\"valores xi\", valores_Xi);\n    }\n\n    const calcDistNormal = () => {\n\n        let num_random = []\n        let valores_Xi = []\n        let suma_r = []\n        let resta_r = []\n        let tabla = []\n\n        for (let i = 0; i < norRandomN * 12; i++) {\n            num_random[i] = parseFloat(\n                (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n            );\n        }\n\n        for (let i = 0; i < norRandomN * 12; i += 12) {\n            let count = 0;\n            for (let e = 0; e < 12; e++) {\n                count += num_random[i + e];\n            }\n            suma_r.push(count.toFixed(4));\n            resta_r.push((count - 6).toFixed(4));\n        }\n\n        for (let i = 0; i < norRandomN; i++) {\n            valores_Xi[i] =\n                parseFloat(resta_r[i]) + norDS + norMedia;\n        }\n\n        for (let i = 0; i < norRandomN; i++) {\n            let obj = {\n                suma: suma_r[i],\n                resta: resta_r[i],\n                xi: valores_Xi[i]\n            }\n            tabla.push(obj)\n        }\n\n        setNorResults(tabla)\n        /*\n        console.log(\"num random\", num_random);\n        console.log(\"valores xi\", valores_Xi);\n        console.log(\"suma_r\", suma_r)*/\n    }\n\n    const calcDistBinomial = () => {\n\n        let num_random = []\n        let valores_Xi = []\n        let error = 1 - biProb;\n        let valores_df = []\n\n        for (let i = 0; i < biN; i++) {\n            num_random.push([]);\n            valores_Xi.push([]);\n            for (let e = 0; e < biN; e++) {\n                num_random[i][e] = parseFloat(\n                    (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n                );\n            }\n        }\n\n        for (let i = 0; i < biN; i++) {\n            for (let j = 0; j < biN; j++) {\n                if (num_random[j][i] <= error) {\n                    valores_Xi[j][i] = 1;\n                } else {\n                    valores_Xi[j][i] = 0;\n                }\n            }\n        }\n\n        for (let i = 0; i < biN; i++) {\n            let count = 0;\n            for (let j = 0; j < biN; j++) {\n                if (valores_Xi[j][i] == 1) {\n                    count++;\n                }\n            }\n            valores_df.push(count);\n        }\n\n        setBiDef(valores_df)\n        console.log(\"num random\", num_random);\n        console.log(\"valores xi\", valores_Xi);\n        console.log(\"valores df\", valores_df);\n    }\n\n    const calculate = () => {\n\n        if (distSelected === 1) {\n            calcDistErlang()\n        } else if (distSelected === 2) {\n            calcDistNormal()\n        } else if (distSelected === 3) {\n            calcDistBinomial()\n        }\n        setDisplay(true)\n    }\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Convolución\" />\n\n            <div className='form-group'>\n\n                <div className=\"row\">\n                    <p>Se generan numeros aleatorios internamente...</p>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"dropdown\">\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {distName}\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                            <div className=\"dropdown-item\" onClick={(e) => setDistSelected(1)}>Erlang</div>\n                            <div className=\"dropdown-item\" onClick={(e) => setDistSelected(2)}>Normal</div>\n                            <div className=\"dropdown-item\" onClick={(e) => setDistSelected(3)}>Binomial</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <span className=\"col\">{distFormulaStr}</span>\n                </div>\n\n            </div>\n\n            {/* ERLANG */}\n            {distSelected === 1 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Erlang: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setNum_erlang(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Media: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setMedia_erlang(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Piezas: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setCantidad_piezas_erlang(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n            {display && distSelected === 1 &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Yi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            erlangResult.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.rs}</td>\n                                        <td>{e.y}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* NORMAL */}\n            {distSelected === 2 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Media: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setNorMedia(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Desviación estándar: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setNorDS(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">N de variables aleatorias: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setNorRandomN(e.target.value * 1)} />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">tamaño </span>\n                            </div>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n            {display && distSelected === 2 &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">suma</th>\n                            <th scope=\"col\">resta</th>\n                            <th scope=\"col\">xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            norResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.suma}</td>\n                                        <td>{e.resta}</td>\n                                        <td>{e.xi.toFixed(4)}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* BINOMIAL */}\n            {distSelected === 3 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">N: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setBiN(e.target.value * 1)} />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">tamaño </span>\n                            </div>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">P: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setBiProb(e.target.value * 1)} />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">% [Probabilidad de éxito] : </span>\n                            </div>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n            {display && distSelected === 3 &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Defectos</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            biDef.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n        </div>\n    )\n}\n\nexport default MetodoConvolucion","import React, { useState, useEffect } from 'react'\nimport { standardNormalTable, standardDeviation, zScore } from 'simple-statistics'\nimport TitleBar from '../TitleBar/TitleBar'\n\nconst MetodoTransformadaInversa = () => {\n    let [rawList, setRawList] = useState(\"\");\n    let [distSelected, setDistSelected] = useState(0);\n    let [distName, setDistName] = useState(\"Selecciona una Distribución\");\n    let [distFormulaStr, setDistFormulaStr] = useState(\"\");\n    let [display, setDisplay] = useState(false);\n    let [uniVarA, setUniVarA] = useState(0);\n    let [uniVarBmA, setUniVarBmA] = useState(0);\n    let [uniResults, setUniResults] = useState([]);\n    let [expVarDelta, setExpVarDelta] = useState(0);\n    let [expResults, setExpResults] = useState([]);\n    let [berVarSuccess, setBerVarSuccess] = useState(0);\n    let [berResults, setBerResults] = useState([]);\n    let [poiVarProbSize, setPoiVarProbSize] = useState(0);\n    let [poiVarDelta, setPoiVarDelta] = useState(0);\n    let [poiResults, setPoiResults] = useState([]);\n\n    useEffect(() => {\n        if (distSelected === 1) {\n            setDistName(\"Normal Estándard\")\n            setDistFormulaStr(\"\")\n        } else if (distSelected === 2) {\n            setDistName(\"Uniforme\")\n            setDistFormulaStr(\"𝑥𝑖=𝑎+(𝑏−𝑎)𝑟𝑖\")\n        } else if (distSelected === 3) {\n            setDistName(\"Exponencial\")\n            setDistFormulaStr(\"𝑥𝑖=−1/𝜆 ln⁡(1−𝑟𝑖)\")\n        } else if (distSelected === 4) {\n            setDistName(\"Bernoulli\")\n            setDistFormulaStr(\"𝑝(𝑋)=𝑝^𝑥 (1−𝑝)^(1−𝑥)\")\n        } else if (distSelected === 5) {\n            setDistName(\"Poisson\")\n            setDistFormulaStr(\"𝑝(𝑥)=  (𝜆^𝑥 𝑒^(−𝜆))/𝑥!\")\n        }\n    }, [distSelected]);\n\n    const calcDistNormal = (list) => {\n        for (let i = -3; i <= 3; i++) {\n            let mean = getMean(list)\n            let sd = standardDeviation(list)\n            console.log(i, mean, sd, zScore(i, mean, sd))\n        }\n    }\n\n    const calcDistUniforme = (list) => {\n        let tempUniResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: uniVarA + (uniVarBmA * ri)\n            }\n            tempUniResults.push(obj)\n        })\n        setUniResults(tempUniResults)\n    }\n\n    const calcDistExponencial = (list) => {\n        let tempExpResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: (Math.log(1 - ri) * (1 / expVarDelta)) * -1\n            }\n            tempExpResults.push(obj)\n        })\n        setExpResults(tempExpResults)\n    }\n\n    const calcDistBernoulli = (list) => {\n        let tempBerResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: (ri >= berVarSuccess) ? 1 : 0\n            }\n            tempBerResults.push(obj)\n        })\n        setBerResults(tempBerResults)\n    }\n\n    const calcDistPoisson = (list) => {\n        let table = getProbabilityForPoisson()\n        let tempPoissonResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: findInProbTable(table, ri)\n            }\n            tempPoissonResults.push(obj)\n        })\n        setPoiResults(tempPoissonResults)\n    }\n\n    const getMean = (list) => {\n        if (list.length > 0) {\n            let sum = list.reduce((prev, curr) => {\n                return (Number(prev) + Number(curr)).toFixed(4)\n            })\n            return sum / list.length\n        }\n        return 0\n    }\n\n    const factorial = (num) => {\n        let rval = 1;\n        for (let i = 2; i <= num; i++)\n            rval = rval * i;\n        return rval;\n    }\n\n    const getProbabilityForPoisson = () => {\n        let table = []\n        let acumPx = 0\n        for (let i = 0; i <= poiVarProbSize; i++) {\n            let px = (Math.pow(poiVarDelta, i) * Math.exp(-poiVarDelta)) / (factorial(i))\n            acumPx += px\n            let obj = {\n                x: i,\n                px: px.toFixed(4),\n                acum: acumPx.toFixed(4)\n            }\n            table.push(obj)\n        }\n        return table\n    }\n\n    const findInProbTable = (table, needle) => {\n        let prevAcum = 0\n\n        for (let i = 0; i <= poiVarProbSize; i++) {\n            if (needle >= prevAcum && needle <= table[i].acum) {\n                return table[i].x\n            }\n            prevAcum = table[i].acum\n        }\n        return 0\n    }\n\n    const calculate = () => {\n        let list = inputToList()\n\n        if (distSelected === 1) {\n            calcDistNormal(list)\n        } else if (distSelected === 2) {\n            calcDistUniforme(list)\n        } else if (distSelected === 3) {\n            calcDistExponencial(list)\n        } else if (distSelected === 4) {\n            calcDistBernoulli(list)\n        } else if (distSelected === 5) {\n            calcDistPoisson(list)\n        }\n        setDisplay(true)\n    }\n\n    const inputToList = () => {\n        let cleanedList = rawList.split(',').map((x) => {\n            return x.trim() * 1\n        })\n        return cleanedList\n    }\n\n\n    return (\n        <div className=\"container\">\n            <TitleBar title=\"Transformada Inversa\" />\n\n            <div className='form-group'>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\" id=\"basic-addon1\">Input (R): </span>\n                    </div>\n                    <textarea id=\"list\" onChange={(e) => setRawList(e.target.value)} />\n                    <div className=\"input-group-append\">\n                        <span className=\"input-group-text\" id=\"basic-addon2\">CSV</span>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"dropdown\">\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {distName}\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                            <div className=\"dropdown-item\" onClick={(e) => setDistSelected(2)}>Uniforme</div>\n                            <div className=\"dropdown-item\" onClick={(e) => setDistSelected(3)}>Exponencial</div>\n                            <div className=\"dropdown-item\" onClick={(e) => setDistSelected(4)}>Bernoulli</div>\n                            <div className=\"dropdown-item\" onClick={(e) => setDistSelected(5)}>Poisson</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <span className=\"col\">{distFormulaStr}</span>\n                </div>\n\n            </div>\n            {/* NORMAL */}\n            {distSelected === 1 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n\n            }\n\n            {/* UNIFORME */}\n            {distSelected === 2 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">a: </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setUniVarA(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">(b - a): </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setUniVarBmA(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n\n            }\n            {display && distSelected === 2 &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            uniResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi.toFixed(2)}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* EXPONENCIAL */}\n            {distSelected === 3 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">𝜆 : </span>\n                            </div>\n                            <input type='number' min='100' max='999999' onChange={(e) => setExpVarDelta(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n            {display && distSelected === 3 &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            expResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi.toFixed(2)}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* BERNOULLI */}\n            {distSelected === 4 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">P: </span>\n                            </div>\n                            <input type='number' onChange={(e) => setBerVarSuccess(e.target.value * 1)} />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">% [Probabilidad de éxito] : </span>\n                            </div>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n            {display && distSelected === 4 &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            berResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* POISSON */}\n            {distSelected === 5 &&\n                <div className=\"row\">\n                    <div className='form-group'>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">𝜆 : </span>\n                            </div>\n                            <input type='number' onChange={(e) => setPoiVarDelta(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"basic-addon1\">N : </span>\n                            </div>\n                            <input type='number' onChange={(e) => setPoiVarProbSize(e.target.value * 1)} />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text\" id=\"basic-addon2\">Probabilidades a calcular</span>\n                            </div>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n            {display && distSelected === 5 &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            poiResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"row\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport default MetodoTransformadaInversa\n\n/*\nUNI\n\n0.48,\n0.82,\n0.69,\n0.67,\n0\n\nEXP\n0.64,\n0.83,\n0.03,\n0.50,\n0.21\n\nBER\n0.453,\n0.823,\n0.034,\n0.503,\n0.891\n\n\nPOISSON\n0.6754,\n0.0234,\n0.7892,\n0.5134,\n0.3331\n\n0.357125801,\n0.770024001,\n0.788067728,\n0.224368424,\n0.725242401,\n0.309568122,\n0.539200124,\n0.067144586,\n0.410579805,\n0.12479252\n\n*/","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from '../Home/Home'\nimport AlgoritmoCuadradosMedios from '../algoritmos/algoritmoCuadradosMedios';\nimport AlgoritmoMultiplicadorConstante from '../algoritmos/algoritmoMultiplicadorConstante';\nimport AlgoritmoLineal from '../algoritmos/algoritmoLineal';\nimport AlgoritmoCongruencialMultiplicativo from '../algoritmos/algortimoCongruencialMultiplicativo';\nimport AlgoritmoCongruencialAditivo from '../algoritmos/algortimoCongruencialAditivo'\nimport AlgoritmoCongruencialCuadratico from '../algoritmos/algortimoCongruencialCuadratico'\nimport AlgoritmoProductosMedios from '../algoritmos/algoritmoProductosMedios'\nimport PruebaDstrbcnChiCdrd from '../pruebas/pruebaDistChiCuad'\nimport PruebaVarianza from '../pruebas/pruebaVarianza'\nimport PruebaUnidormidadChiCuadrada from '../pruebas/pruebaUniformidadChiCuadrada'\nimport PruebaHuecos from '../pruebas/pruebaHuecos'\nimport PruebaCorrArrAbMed from '../pruebas/pruebaIndCorrArrAbMed'\nimport PruebaIndepCorrArrAb from '../pruebas/pruebaIndepCorrArrAb'\nimport PruebaKolSmir from '../pruebas/pruebaKolSmir'\nimport PruebaMedias from '../pruebas/pruebaMedias'\nimport PruebaPoker from '../pruebas/pruebaPoker'\nimport PruebaSerie from '../pruebas/pruebaSeries'\nimport PruebaUniformidadKolSmir from '../pruebas/pruebaUniformidadKolSmir'\nimport MetodoConvolucion from '../metodos/metodoConvolucion'\nimport MetodoTransformadaInversa from '../metodos/metodoTransformadaInversa'\n\n\nclass Routes extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/algoritmo/cuadrados-medios\" component={AlgoritmoCuadradosMedios} />\n                <Route exact path=\"/algoritmo/productos-medios\" component={AlgoritmoProductosMedios} />\n                <Route exact path=\"/algoritmo/multiplicador-constante\" component={AlgoritmoMultiplicadorConstante} />\n                <Route exact path=\"/algoritmo/lineal\" component={AlgoritmoLineal} />\n                <Route exact path=\"/algoritmo/congruencial-multiplicativo\" component={AlgoritmoCongruencialMultiplicativo} />\n                <Route exact path=\"/algoritmo/congruencial-aditivo\" component={AlgoritmoCongruencialAditivo} />\n                <Route exact path=\"/algoritmo/congruencial-cuadratico\" component={AlgoritmoCongruencialCuadratico} />\n                <Route exact path=\"/prueba/medias\" component={PruebaMedias} />\n                <Route exact path=\"/prueba/varianza\" component={PruebaVarianza} />\n                <Route exact path=\"/prueba/uniformidad-chi-cuadrada\" component={PruebaUnidormidadChiCuadrada} />\n                <Route exact path=\"/prueba/uniformidad-kolmogorov-smirnov\" component={PruebaUniformidadKolSmir} />\n                <Route exact path=\"/prueba/independencia-corridas-arriba-abajo\" component={PruebaIndepCorrArrAb} />\n                <Route exact path=\"/prueba/independencia-corridas-arriba-abajo-media\" component={PruebaCorrArrAbMed} />\n                <Route exact path=\"/prueba/poker\" component={PruebaPoker} />\n                <Route exact path=\"/prueba/series\" component={PruebaSerie} />\n                <Route exact path=\"/prueba/huecos\" component={PruebaHuecos} />\n                <Route exact path=\"/prueba/distribucion-chi-cuadrada\" component={PruebaDstrbcnChiCdrd} />\n                <Route exact path=\"/prueba/kolmogorov-smirnov\" component={PruebaKolSmir} />\n                <Route exact path=\"/metodo/transformada-inversa\" component={MetodoTransformadaInversa} />\n                <Route exact path=\"/metodo/convolucion\" component={MetodoConvolucion} />\n            </Switch >\n        );\n    }\n}\n\nexport default Routes;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\n                <Link to='/' className=\"navbar-brand\" >Simulación: generador</Link>\n                <button id=\"closeNav\" className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#!\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Algoritmos\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <Link to='/algoritmo/cuadrados-medios' className=\"dropdown-item\" >Cuadrados Medios</Link>\n                                <Link to='/algoritmo/productos-medios' className=\"dropdown-item\" >Productos Medios</Link>\n                                <Link to='/algoritmo/multiplicador-constante' className=\"dropdown-item\">Multiplicador Constante</Link>\n                                <Link to='/algoritmo/lineal' className=\"dropdown-item\" >Lineal</Link>\n                                <Link to='/algoritmo/congruencial-multiplicativo' className=\"dropdown-item\" >Congruencial Multiplicativo</Link>\n                                <Link to='/algoritmo/congruencial-aditivo' className=\"dropdown-item\" >Congruencial Aditivo</Link>\n                                <Link to='/algoritmo/congruencial-cuadratico' className=\"dropdown-item\" >Congruencial Cuadrático</Link>\n                            </div>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#!\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Prueblas\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <Link to='/prueba/medias' className=\"dropdown-item\">Medias</Link>\n                                <Link to='/prueba/varianza' className=\"dropdown-item\">Varianza</Link>\n                                <Link to='/prueba/uniformidad-chi-cuadrada' className=\"dropdown-item\">Uniformidad Chi Cuadrada</Link>\n                                <Link to='/prueba/uniformidad-kolmogorov-smirnov' className=\"dropdown-item\">Uniformidad Kolmogorov-Smirnov</Link>\n                                <Link to='/prueba/independencia-corridas-arriba-abajo' className=\"dropdown-item\">Independencia Corridas Arriba y Abajo</Link>\n                                <Link to='/prueba/independencia-corridas-arriba-abajo-media' className=\"dropdown-item\">independencia Corridas Arriba y Abajo Media</Link>\n                                <Link to='/prueba/poker' className=\"dropdown-item\">Poker</Link>\n                                <Link to='/prueba/series' className=\"dropdown-item\">Series</Link>\n                                <Link to='/prueba/huecos' className=\"dropdown-item\">Huecos</Link>\n                            </div>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#!\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Metodos\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <Link to='/metodo/transformada-inversa' className=\"dropdown-item\">Transformada Inversa</Link>\n                                <Link to='/metodo/convolucion' className=\"dropdown-item\">Convolución</Link>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './components/Routes/Routes';\nimport './App.css';\nimport Header from './containers/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Routes />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}